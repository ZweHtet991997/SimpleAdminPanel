@page "/homeloan"
@inject HomeLoanApiServices service;
@inject NavigationManager navigationManager;
@using SimpleAdminPanel.Models;

<h5>Home Loan / LS Assign HL</h5>
@{
    string loader = $"img/loading.gif";
    if (dataResult.Count == 0)
    {
        <div class="centerloader">
            <img src="@(loader)" />
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-4">
                <select class="form-select" aria-label="Default select example">
                    <option selected>All</option>
                    <option value="1">New</option>
                    <option value="2">Assigned</option>
                    <option value="3">Legal Request</option>
                </select>
            </div>
        </div>
        <br />
        <br />

        <table class="table">
            <thead>
                <tr>
                    <th>Case ID</th>
                    <th>Customer Name</th>
                    <th>Submission Date</th>
                    <th>Region</th>
                    <th>Branch Name</th>
                    <th>View Details</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in dataResult)
                {
                    <tr>
                        <td>@item.ID</td>
                        <td>@item.CustomerName</td>
                        <td>@item.SubmissionDate</td>
                        <td>@item.Region</td>
                        <td>@item.BranchName</td>
                        <td><button class="btn btn-info btn-sm" style="font-size:13px" @onclick=@Create>Details</button></td>
                        <td>
                            @{
                                switch (item.Status)
                                {
                                    case null:
                                        <button class="btn btn-success btnstatus btn-new">New</button>
                                        break;
                                    case "Analyst Assign":
                                        <button class="btn btn-success btn btnstatus btn-assign">Assigned</button>
                                        break;
                                    case "Recommended Property Price and Complete (DOA)":
                                        <button class="btn btn-success btn btnstatus btn-recommend">Recommend</button>
                                        break;
                                    case "LS complete with Requirements":
                                        <button class="btn btn-success btn btnstatus btn-complete">Completed</button>
                                        break;
                                    case "LS Update for Normal and Underwriting Branch":
                                        <button class="btn btn-success btn btnstatus btn-update">Update</button>
                                        break;
                                    case "LS Return":
                                        <button class="btn btn-success btn btnstatus btn-return">Return</button>
                                        break;
                                    case "Request Approval and Noti Issue":
                                        <button class="btn btn-success btn btnstatus btn-request">Request</button>
                                        break;
                                    case "LS Remove":
                                        <button class="btn btn-success btn btnstatus btn-remove">Remove</button>
                                        break;
                                    default:
                                        break;
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private List<Form1ResponseModel> dataResult = new List<Form1ResponseModel>();
    protected override async Task OnInitializedAsync()
    {
        dataResult = await service.GetForm1List();
    }
    protected void Create()
    {
        navigationManager.NavigateTo("create");
    }
}
